<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<import resource="database/Spring-Datasource.xml" />

	<!-- Enable component-scan only on needed resources to prevent unwanted 
		behavior in Transaction Management -->
	<context:component-scan base-package="com.example.samplewebapp.aspect.logging" />
	<context:component-scan base-package="com.example.samplewebapp.dal" />
	<context:component-scan base-package="com.example.samplewebapp.domain.service" />

	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven />

	<!-- Enable Spring to automatically discover the underlying JTA implementation. 
		Use this when running on application server (like JBoss or WAS) or if running 
		on servlet container with third party TM (like Tomcat with Atomikos). -->
	<!-- <tx:jta-transaction-manager /> -->

	<!-- This will not be needed when using an underlying JTA implementation 
		(just enable tx:jta-transaction-manager) -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dbDataSource" />
	</bean>

	<aop:aspectj-autoproxy />
</beans>